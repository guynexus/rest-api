{"version":3,"sources":["components/columns/employees.js","components/MyModal.js","components/Employee.js","components/ReactTable.js","components/MUITableHead.js","components/MUITable.js","components/MUIAppBar.js","images/logos/sqlite.svg","images/index.js","images/logos/express-dark.png","images/logos/react-table.svg","images/logos/nodejs-icon-1.png","App.js","components/hooks/useFetch.js","reportWebVitals.js","theme.js","index.js"],"names":["EMPLOYEES","Header","Footer","accessor","d","first_name","last_name","id","assigned","modalStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","position","top","backgroundColor","boxShadow","shadows","ColorButton","withStyles","root","IconButton","MyModal","params","classes","useState","open","setOpen","onClick","size","edit","style","fontSize","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","children","sample","profession","code","color","city","branch","useStyles","padding","spacing","textAlign","alignSelf","Employee","props","url","data","setData","onChange","e","prev","target","name","value","onSwitch","onDone","preventDefault","window","location","reload","a","employee","fetch","method","headers","body","JSON","stringify","result","json","console","log","toLable","str","replace","toUpperCase","Paper","Grid","container","direction","alignContent","item","xs","justify","Object","keys","map","idx","FormControlLabel","label","control","Switch","checked","TextField","defaultValue","values","disabled","variant","Button","width","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","ReactTable","caption","employees","pageSize","hiddenColumns","sortBy","desc","initialState","setInitialSate","columns","useMemo","tableHooks","useTable","useSortBy","usePagination","getTableProps","state","pageIndex","TableContainer","Table","THead","tHooks","TBody","TFoot","headerGroups","TableHead","TableRow","TableCell","colSpan","Typography","title","component","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","page","prepareRow","getTableBodyProps","TableBody","row","getRowProps","hover","cells","cell","getCellProps","align","allColumns","pageOptions","setPageSize","gotoPage","canNextPage","canPreviousPage","nextPage","pageCount","previousPage","length","type","min","max","pageNumber","Number","getToggleHiddenProps","headCells","numeric","disablePadding","MUITableHead","order","orderBy","orderByID","onRequestSort","headCell","sortDirection","TableSortLabel","active","property","event","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","MUITable","rows","rowNumber","setOrder","setOrderBy","selected","setSelected","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleChangeDense","emptyRows","Math","aria-label","numSelected","onSelectAllClick","newSelecteds","n","rowCount","slice","isItemSelected","indexOf","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","flexGrow","appBar","menuButton","marginRight","MUIAppBar","AppBar","Toolbar","edge","logos","App","options","loading","setLoading","error","setError","fetchUrl","response","useEffect","useFetch","path","exact","alt","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","purple","secondary","green","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a9ab24db.chunk.js","sourcesContent":["const  EMPLOYEES = [\r\n  {\r\n    Header: 'ID',\r\n    Footer: 'ID',\r\n    accessor: 'id'\r\n  },\r\n  {\r\n    Header: 'Code',\r\n    Footer: 'Code',\r\n    accessor: 'code'\r\n  },\r\n  {\r\n    Header: 'Name',\r\n    Footer: 'Name',\r\n    accessor: d => `${d.first_name} ${d.last_name}`\r\n  },\r\n  {\r\n    Header: 'Profession',\r\n    Footer: 'Profession',\r\n    accessor: 'profession'\r\n  },\r\n  {\r\n    Header: 'Color',\r\n    Footer: 'Color',\r\n    accessor: 'color'\r\n  },\r\n  {\r\n    Header: 'City',\r\n    Footer: 'City',\r\n    accessor: 'city'\r\n  },\r\n  {\r\n    Header: 'Branch',\r\n    Footer: 'Branch',\r\n    accessor: 'branch'\r\n  },\r\n  {\r\n    id: 'Assigned',\r\n    Header: '',\r\n    Footer: 'assigned',\r\n    // eslint-disable-next-line eqeqeq\r\n    accessor: d => d.assigned==false ? '' : 'assigned'\r\n   }\r\n];\r\n\r\nexport default EMPLOYEES;","import { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n// import {Button} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst modalStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    top: 100,\r\n    backgroundColor: '#eee',//theme.palette.background.paper,\r\n    // border: '0.0 solid #eee',\r\n    boxShadow: theme.shadows[5],\r\n    // padding: theme.spacing(0, 0, 0),\r\n  },\r\n}));\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '',\r\n    '&:hover': {\r\n      backgroundColor: '#fde',\r\n    },\r\n  },\r\n}))(IconButton);\r\n\r\nexport default function MyModal(params) {\r\n  \r\n  const classes = modalStyles();\r\n  \r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>      \r\n      <ColorButton onClick={handleOpen} size='small'>{params.edit ? <EditIcon  style={{ fontSize: '0.8rem' }}/> : <AddCircleIcon  fontSize=\"small\"/> } </ColorButton>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            {params.children}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst sample = {id:'',first_name:'John',last_name:'Smith',profession:\"Fetchit\",code:\"F000\",color:\"Purple\",city:\"Mississauga\",branch:\"Abacus\",assigned:false}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    backgroundColor: '#eee',//theme.palette.text.secondary,\r\n    alignSelf: 'center',\r\n  },\r\n}));\r\n\r\nexport default function Employee(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const url = 'http://localhost:8080/api/employees/';\r\n\r\n  const [data, setData] = useState(props.data || sample);\r\n\r\n  function onChange(e) {\r\n    setData( prev => ({...prev, [e.target.name]:e.target.value}));\r\n  }\r\n  \r\n function onSwitch() {\r\n    setData( prev => ({...prev, assigned: !prev.assigned}));\r\n  }\r\n\r\n  function onDone(e){\r\n    e.preventDefault(); \r\n    window.location.reload();\r\n  }\r\n\r\n  async function onCreate(e){\r\n    e.preventDefault();\r\n    const employee = data;\r\n    delete employee.id;\r\n    try {\r\n      const result = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({data:employee})\r\n      });\r\n      const json = await result.json();\r\n      setData(() => ({...json.data}));\r\n    } catch(err) {      \r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function onUpdate(e){ \r\n    e.preventDefault();\r\n    try {\r\n      const result = await fetch(url+data.id,{\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({data: data}),\r\n      });\r\n      const json = await result.json();\r\n      setData(() => ({...json.data}));\r\n    } catch(err) {\r\n      console.log(err);      \r\n    }\r\n  }\r\n\r\n  async function onDelete(e){ \r\n    e.preventDefault();\r\n    try {\r\n      await fetch(url+data.id,{method:'DELETE'});\r\n      window.location.reload();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  function toLable(str) {\r\n    return str.replace(/_/g, \" \").replace(/(?:^|\\s)\\S/g,  (a) => a.toUpperCase());\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Paper className={classes.paper}>\r\n      <Grid container spacing={1} direction='column'  alignContent='left'>\r\n        <Grid item xs={12} alignItems='left' justify='left'>\r\n          {data.id?'Employee: '+data.id:'New Employee'}\r\n        </Grid>\r\n        {\r\n          Object.keys(data).map( (e,idx) => <>\r\n              { e === 'id' || e === 'deleted_at' || e === 'updated_at' || e === 'created_at'\r\n              ? <></>\r\n              : \r\n              <Grid item xs={12} alignContent={e==='assigned'?'left':'left'}>              \r\n                { e === 'assigned'\r\n                ? <FormControlLabel \r\n                  alignSelf='left'             \r\n                  label={toLable(e)}\r\n                  control={\r\n                    <Switch\r\n                    alignSelf='left'       \r\n                    id={e}\r\n                    name={e}\r\n                    checked={data.assigned}\r\n                    onChange={onSwitch}\r\n                  />}>                \r\n                  </FormControlLabel>\r\n                : <TextField\r\n                    id={e}\r\n                    name={e} \r\n                    defaultValue={Object.values(data)[idx]}\r\n                    label={toLable(e)}\r\n                    disabled={ e === 'code' || e === 'status' || e === 'updated_at' || e === 'created_at'}\r\n                    onChange={onChange}\r\n                    size='small'\r\n                    variant=\"outlined\"\r\n                  />\r\n                }\r\n              </Grid>\r\n              }\r\n          </>)\r\n        }\r\n        <Grid item xs={12}>\r\n          { data.id \r\n          ? <>\r\n            <Button onClick={onUpdate} >Update</Button>\r\n            <Button onClick={onDone} >Done</Button>\r\n            <Button onClick={onDelete} >Delete</Button>\r\n            </>\r\n          : <>\r\n            <Button onClick={onCreate} >Create</Button>\r\n            <Button onClick={onDone} >Cancel</Button>\r\n            </>\r\n          }\r\n        </Grid>\r\n      </Grid>    \r\n    </Paper>\r\n    </div>\r\n  )\r\n}\r\n","// React Table\r\n\r\nimport {useMemo, useState} from 'react';\r\nimport {useTable, useSortBy, usePagination} from 'react-table';\r\nimport EMPLOYEES from './columns/employees';\r\nimport MyModal from './MyModal';\r\nimport Employee from './Employee';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\n// import TableFooter from '@material-ui/core/TableFooter';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import { TableFooter } from '@material-ui/core';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\nexport default function ReactTable({caption, employees}) {\r\n  const classes = useStyles();\r\n  \r\n  const [initialState, setInitialSate] = useState({ \r\n    pageSize: 50, \r\n    hiddenColumns: [ 'id', 'color' ], \r\n    sortBy: [{ id: 'id', desc: false }]\r\n  });\r\n\r\n  const columns = useMemo(() =>  EMPLOYEES, []);\r\n  const data = useMemo(() => employees, [employees]);\r\n  \r\n  const tableHooks = useTable(\r\n    { columns, data, initialState }, \r\n    useSortBy, \r\n    usePagination\r\n  );\r\n\r\n  const {getTableProps, state } = tableHooks;\r\n\r\n  const { pageIndex, pageSize }  = state;\r\n\r\n  return (<>\r\n  \r\n  <Paper className={classes.paper}>\r\n    <TableContainer>\r\n      <Table\r\n        {...getTableProps()}\r\n        size='small'\r\n        className={classes.table}\r\n        // aria-labelledby=\"tableTitle\"\r\n      >\r\n        <THead tHooks={tableHooks} caption={caption}/>\r\n        {TBody(tableHooks,employees)}\r\n      </Table>\r\n    </TableContainer>\r\n    {TFoot(tableHooks,setInitialSate,pageIndex,pageSize)}\r\n  </Paper>\r\n  </>)  \r\n}\r\n\r\nfunction THead( props ) {\r\n  const  { tHooks , caption } = props;\r\n  const { headerGroups } = tHooks;\r\n  const classes = useStyles();\r\n  return <TableHead>\r\n    <TableRow>    \r\n      <TableCell colSpan={2} style={{textAlign: 'left' }}>        \r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {caption}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell colSpan={6} padding='none' style={{textAlign: 'right' }}>\r\n        <MyModal><Employee/></MyModal>\r\n      </TableCell>              \r\n    </TableRow>\r\n    {headerGroups.map((headerGroup, idx) => (\r\n      <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n        {headerGroup.headers.map(column => (\r\n          <TableCell {...column.getHeaderProps(column.getSortByToggleProps())}>            \r\n            {column.render('Header')}\r\n            {column.isSorted ? (column.isSortedDesc ? ' ▼' : ' ▲') : ''}\r\n          </TableCell>\r\n        ))}\r\n        <TableCell> \r\n        </TableCell>  \r\n      </TableRow>\r\n    ))}\r\n  </TableHead>\r\n }\r\n\r\nfunction TBody({page,prepareRow,getTableBodyProps},employees) {\r\n  return <TableBody {...getTableBodyProps()}>\r\n    {page.map(row => {\r\n    prepareRow(row)\r\n    return (\r\n      <TableRow {...row.getRowProps()}  hover>\r\n      {/* <tr {...row.getRowProps()} onClick={ () => <CreateModal />}> */}\r\n        {\r\n          row.cells.map(cell => (\r\n            <TableCell size='small' {...cell.getCellProps()}>\r\n              {cell.render('Cell')}\r\n            </TableCell>\r\n          ))\r\n        }\r\n        <TableCell align=\"right\" padding='none'>\r\n          <MyModal edit={true} >\r\n            <Employee data={employees[row.id]} />\r\n          </MyModal>\r\n          </TableCell>\r\n      </TableRow>\r\n      \r\n    )\r\n    })}\r\n  </TableBody> \r\n}\r\n\r\nfunction TFoot({allColumns,pageOptions,setPageSize,gotoPage,canNextPage,canPreviousPage,nextPage,pageCount,previousPage },setInitialSate,pageIndex,pageSize) {\r\n  return(<div align='center'>\r\n      <span align='center' >Page{' '}{pageIndex + 1} of {pageOptions.length}{' '}</span>\r\n      <span>| Go to page: {' '}\r\n        <input type='number' min=\"1\" max={pageOptions.length} defaultValue={pageIndex + 1} \r\n          onChange={ e => {\r\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(pageNumber)\r\n          }}\r\n          style={{width: '32px'}} \r\n        />\r\n        <select \r\n          value={pageSize}\r\n          onChange={(e)=> {setPageSize(Number(e.target.value)); setInitialSate(prev=>({...prev,pageSize: e.target.value}) ) }}\r\n          style={{width: '80px'}} \r\n        >\r\n          {[5,10,25,50].map(pageSize => <option key={pageSize} value={pageSize}>Show {pageSize}</option>)}\r\n        </select>\r\n        {' '}\r\n      </span>\r\n      <button onClick={()=>gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n      <button onClick={()=>previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n      <button onClick={()=>nextPage()} disabled={!canNextPage}>Next</button>\r\n      <button onClick={()=>gotoPage(pageCount - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n      <br />\r\n      <span><strong>COLUMNS:</strong></span>\r\n      {allColumns.map(column => \r\n        <span key={column.id}>\r\n          <label>\r\n            <input type=\"checkbox\" {...column.getToggleHiddenProps()}/>            \r\n            {column.Header}\r\n          </label>\r\n        </span>\r\n      )}\r\n        {/* <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={pageOptions.length}\r\n          rowsPerPage={pageSize}\r\n          page={pageIndex}\r\n          onChangePage={(e,p) => gotoPage(Number(p))}\r\n          onChangeRowsPerPage={e => setPageSize(Number(e.target.value))}\r\n        /> */}\r\n    </div>)\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MyModal from './MyModal';\r\nimport Employee from './Employee';\r\n\r\nconst headCells = [\r\n  { id: 'code', numeric: false, disablePadding: false, label: 'CODE' },\r\n  { id: 'first_name', numeric: false, disablePadding: false, label: 'NAME' },\r\n  { id: 'profession', numeric: false, disablePadding: false, label: 'PROFESSION' },\r\n  { id: 'city', numeric: false, disablePadding: false, label: 'CITY' },\r\n  { id: 'branch', numeric: false, disablePadding: false, label: 'BRANCH' },\r\n];\r\n\r\nMUITableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  orderByID: PropTypes.func.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function MUITableHead(props) {\r\n\r\n  const { classes, order, orderBy, orderByID, onRequestSort, caption } = props;\r\n\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>    \r\n        <TableCell colSpan={6} style={{textAlign: 'left' }}>        \r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {caption}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell colSpan={1}  padding='none' style={{textAlign: 'right' }}>\r\n          <MyModal><Employee/></MyModal>\r\n        </TableCell>         \r\n      </TableRow>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        <TableCell padding='none' align='center'><IconButton onClick={orderByID} ></IconButton> </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'center' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell align='right' padding='none'>\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import {useState} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MUITableHead from './MUITableHead';\r\n// import EnhancedTableToolbar from './MUIToolbar';\r\n\r\nimport MyModal from './MyModal';\r\nimport Employee from './Employee';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor:'#eee'\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MUITable(props) {\r\n\r\n  const rows = props.employees;\r\n  const caption = props.caption;\r\n\r\n  let rowNumber = 0;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('id');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <MUITableHead\r\n              caption={caption}\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              orderByID={()=>setOrderBy('id')}\r\n              handleChangeDense={handleChangeDense}\r\n              dense={dense}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      {/* <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell> */} \r\n                      <TableCell align=\"right\" padding='none'>&nbsp;{(page * rowsPerPage + ++rowNumber)}&nbsp;</TableCell>                       \r\n                      <TableCell align=\"left\">{row.code}</TableCell>\r\n                      <TableCell align=\"left\">{row.first_name} {row.last_name}</TableCell>\r\n                      <TableCell align=\"left\">{row.profession}</TableCell>\r\n                      <TableCell align=\"left\">{row.city}</TableCell>\r\n                      <TableCell align=\"left\">{row.branch}</TableCell>\r\n                      <TableCell align=\"right\" padding='none' >&nbsp;&nbsp; \r\n                        {row.assigned==false?'':'assigned  '}\r\n                        <MyModal edit={true}>\r\n                          <Employee data={row} />\r\n                        </MyModal>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <div style={{display:'inline'}}>\r\n          <TablePagination\r\n          padding='none'\r\n          margin='none'\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n          </div>\r\n          <div style={{margin:'0.8rem 0.2rem'}}>\r\n          <Switch checked={dense} size='small' color='#eee' padding='2rem' onChange={handleChangeDense} />\r\n          </div>\r\n        </Grid>        \r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar:{\r\n    backgroundColor:'#ccc',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  \r\n}));\r\n\r\nexport default function MUIAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <Toolbar />\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/sqlite.84de32c4.svg\";","import logo1 from './logos/sqlite.svg';\r\nimport logo2 from './logos/express-dark.png';\r\nimport logo3 from './logos/react-table.svg';\r\nimport logo4 from './logos/nodejs-icon-1.png';\r\n\r\nexport const logos = [logo1, logo2, logo3, logo4];","export default __webpack_public_path__ + \"static/media/express-dark.bd60c4de.png\";","export default __webpack_public_path__ + \"static/media/react-table.f32934a0.svg\";","export default __webpack_public_path__ + \"static/media/nodejs-icon-1.902e2303.png\";","import  ReactTable  from './components/ReactTable';\r\nimport  MUITable  from './components/MUITable';\r\nimport  MUIAppBar  from './components/MUIAppBar';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useFetch } from './components/hooks';\r\nimport { logos } from './images';\r\n\r\nimport './styles/App.css';\r\n\r\nexport default function App() {\r\n\r\n  const [ data, loading ] = useFetch();\r\n\r\n  return ( <> {\r\n    loading \r\n    ? <span>loading...</span> \r\n    : <>\r\n      <MUIAppBar />\r\n      {/* <MUITable caption = { 'Employees' } employees = { data } /> */}\r\n      <main>\r\n        <Switch>\r\n          <Route path = '/' exact ><MUITable caption = { 'Employees' } employees = { data } /></Route>\r\n          <Route path = '/react-table' exact ><ReactTable caption = { 'Employees' } employees = { data } /></Route>\r\n          <Route path = '/mui-table' exact ><MUITable caption = { 'Employees' } employees = { data } /></Route>\r\n        </Switch> \r\n      </main>\r\n      <footer>\r\n        <img alt = 'SQLite Logo'  src = {logos[0]} />\r\n        <img alt = 'Express Logo' src = {logos[1]} />\r\n        <img alt = 'React Table Logo' style = {{ margin: '0px 2px' }} src = {logos[2]} />\r\n        <img alt = 'Node JS Logo' src = {logos[3]} />\r\n      </footer>\r\n    </>    \r\n  } </> );  \r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useFetch( url = '/api/employees/', options = {method: 'GET'}) {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  async function fetchUrl() {\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n\r\n      const response = await fetch(url, options);\r\n      const json = await response.json();\r\n\r\n      setData(json.data);\r\n      setLoading(false);\r\n\r\n    } catch (err){\r\n\r\n      console.log(err);\r\n      setError(err);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => {fetchUrl();  }, []);\r\n\r\n  return [ data, error, loading];\r\n  \r\n}\r\n\r\nexport { useFetch };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n});\r\n\r\nexport default  theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}